version: "3.7"
services:
  backend:
    container_name: backend
    build:
      context: .
      target: development
    command: npm run start:dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 5000:5000
    env_file:
      - .development.env
    networks:
      - mnrn-app
    depends_on:
      - mongo
  web-client:
    container_name: web-client
    build:
      context: ../bubnovskiy30
      dockerfile: Dockerfile.dev
    volumes:
      - ../bubnovskiy30/src:/usr/src/app/src
      - /usr/src/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - 3000:3000
    env_file:
      - ../bubnovskiy30/.env
    networks:
      - mnrn-app
    depends_on:
      - backend
  admin-client:
    container_name: admin-client
    build:
      context: ../bubnovskiy-react-admin
      dockerfile: Dockerfile.dev
    volumes:
      - ../bubnovskiy-react-admin/src:/usr/src/app/src
      - /usr/src/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - 3001:3001
    env_file:
      - ../bubnovskiy-react-admin/.env
    networks:
      - mnrn-app
    depends_on:
      - backend
  mongo:
    container_name: mongo
    image: mongo:5.0.6
    env_file: .development.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - 27018:27017
    networks:
      - mnrn-app
    volumes:
      - mongo-data:/data/db
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
networks:
  mnrn-app:
    driver: bridge

volumes:
  mongo-data:
    driver: local
