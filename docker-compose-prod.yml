version: "3.7"
services:
  nginx:
    container_name: nginx
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    image: hyphast/bub30nginx
    ports:
      - 80:80
      - 8080:8080
    networks:
      - mnrn-app
    depends_on:
      - web-client
      - backend
  backend:
    container_name: backend
    restart: on-failure
    build:
      context: .
    image: hyphast/bub30server
    env_file:
      - .production.env
    networks:
      - mnrn-app
    volumes:
      - ./dist/static:/usr/src/app/src/dist/static
    depends_on:
      - mongo
  web-client:
    container_name: web-client
    restart: on-failure
    build:
      context: ../bubnovskiy30
      dockerfile: Dockerfile.prod
    image: hyphast/bub30web
    env_file:
      - ../bubnovskiy30/.env.production
    networks:
      - mnrn-app
    depends_on:
      - backend
  admin-client:
    container_name: admin-client
    build:
      context: ../bubnovskiy-react-admin
      dockerfile: Dockerfile.prod
    image: hyphast/bub30admin
    env_file:
      - ../bubnovskiy-react-admin/.env.production
    networks:
      - mnrn-app
    depends_on:
      - backend
  mongo:
    container_name: mongo
    image: mongo:5.0.6
    env_file: .production.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - 27018:27017
    networks:
      - mnrn-app
    volumes:
      - mongo-data:/data/db
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
networks:
  mnrn-app:
    driver: bridge

volumes:
  mongo-data:
    driver: local
